name: images pipeline

on: [push]
  
jobs:
    docker_push:
        runs-on: ubuntu-latest
        env:
            IMG_NAME: "jrromb/img-bakery" 
            DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
            DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

        steps:
        - uses: actions/checkout@v1

        - name: Build Docker Image
          run: |
            IMG_TAG=$(date +'%Y%m%d-%H%M')
            echo "::set-env name=IMG_TAG::$IMG_TAG"
            cd ./docker
            docker build . --file Dockerfile --tag $IMG_NAME:$IMG_TAG
            
        - name: Push to Docker Registry
          run: |
            echo "this is the value [$IMG_TAG]"
            docker login -u="$DOCKER_USERNAME" -p="$DOCKER_PASSWORD";
            docker tag $IMG_NAME:$IMG_TAG $IMG_NAME:latest
            docker images
            docker push $IMG_NAME
            docker logout
            rm -rf ~/.docker/config.json
            
        # - name: Update DockerHub Description
        #   run: |
        #     wget https://raw.githubusercontent.com/jrrombaldo/containers/master/update_dockerhub_desc.sh
        #     chmod +x ./update_dockerhub_desc.sh
        #     ./update_dockerhub_desc.sh
        #   env:
        #     CONTAINER: ${IMG_NAME}
   
   
    build_image_CLI:
      name: build CLI image
      runs-on: ubuntu-latest
      needs: [docker_push]

      env:
          IMG_URL: "https://downloads.raspberrypi.org/raspbian_lite_latest"

      steps:
      - uses: actions/checkout@v1

      - name: create CLI image              
        run: |
          sudo apt install qemu-user-static
          ./build.sh
          sudo mv ./result/img-bakery.img.gz ./raspbian-cli.img.gz  && sudo chmod +r ./raspbian-cli.img.gz

      - name: upload CLI image
        uses: actions/upload-artifact@v1
        with:
          name: raspbian-cli
          path: raspbian-cli.img.gz


    build_image_GUI:
      name: build GUI image
      runs-on: ubuntu-latest
      needs: [docker_push]
      env:
          IMG_URL: "https://downloads.raspberrypi.org/raspbian_latest"
      
      steps:
      - uses: actions/checkout@v1

      - name: create GUI image              
        run: |
          sudo apt install qemu-user-static
          ./build.sh
          sudo mv ./result/img-bakery.img.gz ./raspbian-gui.img.gz  && sudo chmod +r ./raspbian-gui.img.gz

      - name: upload GUI image
        uses: actions/upload-artifact@v1
        with:
          name: raspbian-gui
          path: raspbian-gui.img.gz


    release_images:
      name: creating release for images
      runs-on: ubuntu-latest
      needs: [build_image_GUI, build_image_CLI]
      strategy:
        fail-fast: false
      
      steps:
        - name: download CLI image
          uses: actions/download-artifact@v1
          with:
            name: raspbian-cli

        - name: download GUI image
          uses: actions/download-artifact@v1
          with:
            name: raspbian-gui

        - name: create release
          uses: actions/create-release@v1
          id: create_release
          env:
              GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          with:
              tag_name: ${{ github.ref }}
              release_name: Release ${{ github.ref }}
              draft: false
              prerelease: false
              body: |
                Montly release of customised raspbians images lite (CLI only) and complete (with GUI)
        
        - name: upload CLI image
          uses: actions/upload-release-asset@v1
          env:
              GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          with:
              upload_url: ${{ steps.create_release.outputs.upload_url }}
              asset_path: ./raspbian-cli/raspbian-cli.img.gz
              asset_name: raspbian-cli.img.gz
              asset_content_type: application/zip

        - name: upload GUI image
          uses: actions/upload-release-asset@v1
          env:
              GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          with:
              upload_url: ${{ steps.create_release.outputs.upload_url }}
              asset_path: ./raspbian-gui/raspbian-gui.img.gz
              asset_name: raspbian-gui.img.gz
              asset_content_type: application/zip
        

                
